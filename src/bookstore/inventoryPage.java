/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bookstore;

import static bookstore.adminPage.jSplitPane1;
import static bookstore.adminPage.leftPane;
import static bookstore.adminPage.setleftLabelOpaq;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.border.BevelBorder;
import javax.swing.border.SoftBevelBorder;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author detun
 */
public class inventoryPage extends javax.swing.JPanel {
    bookProfilePage bPage;
    static searchPanel sPanel=new searchPanel();
    static java.awt.event.ActionEvent sActionEvent;
    /**
     * Creates new form inventoryPage
     */
    public inventoryPage() {
        initComponents();
        inserAllBook();
        updateBookId();
        setCompBackground();
        clear.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inventoryPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addBook = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contentPanel = new javax.swing.JPanel();
        bookPanel1 = new javax.swing.JPanel();
        xId1 = new javax.swing.JLabel();
        username1 = new javax.swing.JLabel();
        password1 = new javax.swing.JLabel();
        acctType1 = new javax.swing.JLabel();
        securityQuestion3 = new javax.swing.JLabel();
        securityAnswer3 = new javax.swing.JLabel();
        acctType6 = new javax.swing.JLabel();
        bookPanel2 = new javax.swing.JPanel();
        xId2 = new javax.swing.JLabel();
        username2 = new javax.swing.JLabel();
        password2 = new javax.swing.JLabel();
        acctType2 = new javax.swing.JLabel();
        securityQuestion4 = new javax.swing.JLabel();
        securityAnswer4 = new javax.swing.JLabel();
        acctType7 = new javax.swing.JLabel();
        mainP = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        bookPanel = new javax.swing.JPanel();
        xId = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        acctType = new javax.swing.JLabel();
        securityQuestion2 = new javax.swing.JLabel();
        securityAnswer2 = new javax.swing.JLabel();
        acctType5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        checkPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        checkReceipt = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JLabel();
        clear = new javax.swing.JLabel();

        inventoryPanel.setBackground(Book_Store.getColor(1));
        inventoryPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        inventoryPanel.setMinimumSize(new java.awt.Dimension(997, 529));

        jLabel7.setFont(new java.awt.Font("Lucida Handwriting", 1, 18)); // NOI18N
        jLabel7.setText("BOOK INVENTORY");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore/increaseA.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.E_RESIZE_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        addBook.setBackground(Book_Store.getColor(4)
        );
        addBook.setText("ADD");
        addBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addBook.setFocusPainted(false);
        addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(Book_Store.getColor(4)
        );

        jPanel7.setMinimumSize(new java.awt.Dimension(538, 318));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        contentPanel.setBackground(Book_Store.getColor(0));
        contentPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        contentPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        contentPanel.setLayout(new javax.swing.BoxLayout(contentPanel, javax.swing.BoxLayout.Y_AXIS));

        bookPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        bookPanel1.setMaximumSize(new java.awt.Dimension(32767, 36));
        bookPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                bookPanel1ComponentMoved(evt);
            }
        });

        xId1.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        xId1.setText("No");
        xId1.setMaximumSize(new java.awt.Dimension(355, 355));

        username1.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        username1.setText("Serial No");
        username1.setMaximumSize(new java.awt.Dimension(355, 355));

        password1.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        password1.setText("Author");
        password1.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType1.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType1.setText("Shelf");
        acctType1.setMaximumSize(new java.awt.Dimension(355, 355));

        securityQuestion3.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityQuestion3.setText("Book Name");
        securityQuestion3.setMaximumSize(new java.awt.Dimension(355, 355));

        securityAnswer3.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityAnswer3.setText("Section");
        securityAnswer3.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType6.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType6.setText("Price($)");
        acctType6.setMaximumSize(new java.awt.Dimension(355, 355));

        javax.swing.GroupLayout bookPanel1Layout = new javax.swing.GroupLayout(bookPanel1);
        bookPanel1.setLayout(bookPanel1Layout);
        bookPanel1Layout.setHorizontalGroup(
            bookPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xId1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(username1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(password1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(securityQuestion3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(securityAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookPanel1Layout.setVerticalGroup(
            bookPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(bookPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xId1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(username1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(password1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acctType1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityQuestion3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityAnswer3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acctType6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        contentPanel.add(bookPanel1);

        bookPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        bookPanel2.setMaximumSize(new java.awt.Dimension(32767, 36));
        bookPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                bookPanel2ComponentMoved(evt);
            }
        });

        xId2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        xId2.setText("No");
        xId2.setMaximumSize(new java.awt.Dimension(355, 355));

        username2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        username2.setText("Serial No");
        username2.setMaximumSize(new java.awt.Dimension(355, 355));

        password2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        password2.setText("Author");
        password2.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType2.setText("Shelf");
        acctType2.setMaximumSize(new java.awt.Dimension(355, 355));

        securityQuestion4.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityQuestion4.setText("Book Name");
        securityQuestion4.setMaximumSize(new java.awt.Dimension(355, 355));

        securityAnswer4.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityAnswer4.setText("Section");
        securityAnswer4.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType7.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType7.setText("Price($)");
        acctType7.setMaximumSize(new java.awt.Dimension(355, 355));

        javax.swing.GroupLayout bookPanel2Layout = new javax.swing.GroupLayout(bookPanel2);
        bookPanel2.setLayout(bookPanel2Layout);
        bookPanel2Layout.setHorizontalGroup(
            bookPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xId2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(username2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(password2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(securityQuestion4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(securityAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookPanel2Layout.setVerticalGroup(
            bookPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(bookPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xId2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(username2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(password2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acctType2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityQuestion4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityAnswer4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acctType7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        contentPanel.add(bookPanel2);

        mainP.setBackground(new java.awt.Color(255, 255, 255));
        mainP.setMaximumSize(new java.awt.Dimension(32767, 36));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Name");

        javax.swing.GroupLayout mainPLayout = new javax.swing.GroupLayout(mainP);
        mainP.setLayout(mainPLayout);
        mainPLayout.setHorizontalGroup(
            mainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPLayout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        mainPLayout.setVerticalGroup(
            mainPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        contentPanel.add(mainP);

        jScrollPane1.setViewportView(contentPanel);

        bookPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        bookPanel.setMaximumSize(new java.awt.Dimension(32767, 36));
        bookPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                bookPanelComponentMoved(evt);
            }
        });

        xId.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        xId.setText("No");
        xId.setMaximumSize(new java.awt.Dimension(355, 355));

        username.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        username.setText("Serial No");
        username.setMaximumSize(new java.awt.Dimension(355, 355));

        password.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        password.setText("Author");
        password.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType.setText("Shelf");
        acctType.setMaximumSize(new java.awt.Dimension(355, 355));

        securityQuestion2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityQuestion2.setText("Book Name");
        securityQuestion2.setMaximumSize(new java.awt.Dimension(355, 355));

        securityAnswer2.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        securityAnswer2.setText("Section");
        securityAnswer2.setMaximumSize(new java.awt.Dimension(355, 355));

        acctType5.setFont(new java.awt.Font("High Tower Text", 1, 16)); // NOI18N
        acctType5.setText("Price($)");
        acctType5.setMaximumSize(new java.awt.Dimension(355, 355));

        javax.swing.GroupLayout bookPanelLayout = new javax.swing.GroupLayout(bookPanel);
        bookPanel.setLayout(bookPanelLayout);
        bookPanelLayout.setHorizontalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(securityQuestion2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(securityAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(acctType5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookPanelLayout.setVerticalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(xId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acctType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityQuestion2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(securityAnswer2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acctType5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 988, Short.MAX_VALUE)
            .addComponent(bookPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addComponent(bookPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Book List", jPanel7);

        jScrollPane2.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 1, new java.awt.Color(204, 204, 204)));

        checkPanel.setBackground(new java.awt.Color(253, 250, 250));
        checkPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 1, 0, 1));
        checkPanel.setLayout(new javax.swing.BoxLayout(checkPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(checkPanel);

        jLabel1.setBackground(new java.awt.Color(253, 250, 250));
        jLabel1.setFont(new java.awt.Font("Rockwell Nova", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Items");
        jLabel1.setOpaque(true);

        jLabel3.setBackground(new java.awt.Color(253, 250, 250));
        jLabel3.setFont(new java.awt.Font("Rockwell Nova", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Checkout ");
        jLabel3.setOpaque(true);

        jPanel2.setBackground(new java.awt.Color(248, 251, 251));

        checkReceipt.setEditable(false);
        checkReceipt.setColumns(30);
        checkReceipt.setLineWrap(true);
        checkReceipt.setRows(5);
        checkReceipt.setTabSize(5);
        checkReceipt.setBorder(null);
        jScrollPane3.setViewportView(checkReceipt);

        jButton1.setBackground(new java.awt.Color(253, 250, 250));
        jButton1.setText("Charge Customer");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Checkout", jPanel1);

        searchField.setToolTipText("Search Book");
        searchField.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchFieldFocusLost(evt);
            }
        });
        searchField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                searchFieldInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore/search.png.jpg"))); // NOI18N
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.setOpaque(true);
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchButtonMouseExited(evt);
            }
        });

        clear.setBackground(new java.awt.Color(255, 255, 255));
        clear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bookstore/clear.png.jpg"))); // NOI18N
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.setOpaque(true);
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearMouseExited(evt);
            }
        });

        javax.swing.GroupLayout inventoryPanelLayout = new javax.swing.GroupLayout(inventoryPanel);
        inventoryPanel.setLayout(inventoryPanelLayout);
        inventoryPanelLayout.setHorizontalGroup(
            inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryPanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(5, 5, 5)
                .addGroup(inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addBook)
                        .addGap(10, 10, 10))
                    .addGroup(inventoryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(513, 513, 513)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, inventoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        inventoryPanelLayout.setVerticalGroup(
            inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryPanelLayout.createSequentialGroup()
                .addGroup(inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(inventoryPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(inventoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(searchButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(searchField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(clear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addGap(18, 18, 18)
                .addComponent(addBook)
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1019, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(inventoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 546, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addComponent(inventoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, 0)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        leftPane.setVisible(!leftPane.isShowing());
        jSplitPane1.updateUI();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed

        JDialog userDialog = new JDialog();
        bPage = new bookProfilePage(userDialog);
        bPage.setOperation("new book");
        userDialog.add(bPage.contentPanel);
        userDialog.setModalityType(JDialog.ModalityType.APPLICATION_MODAL);
        userDialog.setSize(400,550);
        userDialog.setResizable(false);
        userDialog.setLocationRelativeTo(null);
        //        userDialog.setType(Window.Type.POPUP);
        userDialog.setVisible(true);

//        contentPanel.add(new bookPanel());
        
        contentPanel.updateUI();
        writeJsonFile();
        updateBookId();
        

    }//GEN-LAST:event_addBookActionPerformed

    private void bookPanelComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_bookPanelComponentMoved
//        System.err.println("component moved "+accountsPage.contentPanel.getComponentZOrder(this.userPanel));
    }//GEN-LAST:event_bookPanelComponentMoved

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        sActionEvent=evt;
        searchButtonMouseClicked(null);
//        jTabbedPane1.setComponentAt(0, searchPanel);
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
//        JSONParser jsonParser = new JSONParser();
//         
//        try (FileReader reader = new FileReader("book.json"))
//        {
//            //Read JSON file
//            Object obj = jsonParser.parse(reader);
// 
//            JSONArray bookList = (JSONArray) obj;
////            System.out.println(bookList);
//            
//            //Iterate over employee array
//            
//            sPanel.remove();
//            bookList.forEach( book -> parseSearchObject( (JSONObject) book ) );
//            sPanel.updateUI();
//            jTabbedPane1.setComponentAt(0, sPanel);
//            contentPanel.updateUI();
//        } catch (FileNotFoundException e) {
//            e.printStackTrace();
//        } catch (IOException e) {
//            e.printStackTrace();
//        } catch (ParseException e) {
//            e.printStackTrace();
//        }
            if( setSearchPanel() ){
                jTabbedPane1.setComponentAt(0, sPanel.getPanel());
            }
            jTabbedPane1.updateUI();
       
    }//GEN-LAST:event_searchButtonMouseClicked

    public static boolean serialAvailable(String serial,int compId){
        for(int i=0;i<contentPanel.getComponentCount();i++){
            bookPanel user = (bookPanel)contentPanel.getComponent(i);
            if (user.getSerialNo().toLowerCase().equals(serial.toLowerCase())&&compId!=i) {
                return true;
            }
        }
        return false;
    }
    
    public static boolean setSearchPanel(){
         sPanel.remove();
         boolean result = false;
         String query = searchField.getText().toLowerCase().trim();
         if (!searchField.getText().isEmpty()) {
            for(int i=0;i<contentPanel.getComponentCount();i++){
                bookPanel user = (bookPanel)contentPanel.getComponent(i);

                if(user.getBookName().toLowerCase().contains(query)
                    ||user.getSerialNo().toLowerCase().contains(query)
                    ||user.getAuthor().toLowerCase().contains(query)
                    ||user.getGenre().toLowerCase().contains(query)
                    ||user.getSection().toLowerCase().contains(query)
                    ){
                        sPanel.addBook(new bookPanel(user));
                        result=true;
                    }

                }
                sPanel.getPanel().updateUI();
//             System.err.println("got here in setSearchPanel");
            
        
        }
        if (result==false) {
            JOptionPane.showMessageDialog(inventoryPanel, "no result found");
        }
        if (searchField.getText().length()>=0) 
             clear.setVisible(true);
        
        return result;
         
    }
    
    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        if (searchField.getText().isEmpty()||searchField.getText()==null||searchField.getText()=="") {
//            inserAllBook();
//            updateBookId();
            clear.setVisible(false);
            jTabbedPane1.setComponentAt(0, jPanel7);
            sPanel.removeAll();
            jTabbedPane1.updateUI();
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        searchField.setText(null);
        jTabbedPane1.setComponentAt(0, jPanel7);
        sPanel.removeAll();
        jTabbedPane1.updateUI();
    }//GEN-LAST:event_clearMouseClicked

    private void clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseEntered
        clear.setBackground(new Color(255,250,250));
        clear.updateUI();
    }//GEN-LAST:event_clearMouseEntered

    private void clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseExited
        clear.setBackground(new Color(255,255,255));
        clear.updateUI();
    }//GEN-LAST:event_clearMouseExited

    private void searchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseEntered
        searchButton.setBackground(new Color(255,250,250));
        searchButton.updateUI();
    }//GEN-LAST:event_searchButtonMouseEntered

    private void searchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseExited
        searchButton.setBackground(new Color(255,255,255));
        searchButton.updateUI();
    }//GEN-LAST:event_searchButtonMouseExited

    private void searchFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_searchFieldInputMethodTextChanged
        if (searchField.getText().isEmpty()||searchField.getText()==null) {
            jTabbedPane1.setComponentAt(0, jPanel7);
        }
    }//GEN-LAST:event_searchFieldInputMethodTextChanged

    private void searchFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusLost
        clear.setVisible(false);
    }//GEN-LAST:event_searchFieldFocusLost

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
         if (searchField.getText().length()>=0) 
             clear.setVisible(true);
    }//GEN-LAST:event_searchFieldKeyTyped

    private void bookPanel1ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_bookPanel1ComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_bookPanel1ComponentMoved

    private void bookPanel2ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_bookPanel2ComponentMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_bookPanel2ComponentMoved

    public JPanel getPanel(){
        setleftLabelOpaq(2);
        return inventoryPanel;
    }
    
    public static void addContentPanel(bookPanel panel){
        contentPanel.add(panel);
        contentPanel.updateUI();
    }
    
    public static void addCheckPanel(JPanel panel){
        checkPanel.add(panel);
        checkPanel.updateUI();
        setReceipt();
//        System.err.println("setCheckBackground");
//        checkPanel.setBackground(Color.red);
    }
    public static void removeCheckPanel(JPanel panel){
        checkPanel.remove(panel);
        checkPanel.updateUI();
        System.err.println("remive method");
        setReceipt();
//        checkPanel.setBackground(Color.red);
    }
    
    public static void setReceipt(){
        String s="\tPAYMENT RECEIPT\n\n";
        for(int i=0;i<checkPanel.getComponentCount();i++){
            JPanel panel = (JPanel)checkPanel.getComponent(i);
            String name = ((JLabel)panel.getComponent(2)).getText();
            String price = ((JLabel)panel.getComponent(1)).getText();
            String quantity = ((JLabel)panel.getComponent(3)).getText();
            String total = ((JLabel)panel.getComponent(5)).getText();
            s+=String.format("%-30s (%s) %-6s %-10s %-7s \n", 
                    name,price,quantity,"",total);
        }
        checkReceipt.setText(s);
    }
    
    
    public static void editContentPanel(int xId,bookPanel panel){
        bookPanel user = (bookPanel)contentPanel.getComponent(xId);
        user.setBookName(panel.getBookName());
        user.setSerialNo(panel.getSerialNo());
        user.setSection(panel.getSection());
        user.setShelf(panel.getShelf());
        user.setAuthor(panel.getAuthor());
        user.setQuantity(panel.getQuantity());
        user.setGenre(panel.getGenre());
        user.setPrice(panel.getPrice());
        contentPanel.updateUI();
        writeJsonFile();
//        editJson(xId, panel);
        if (searchPanel.contentPanel.isShowing()) {
//            System.err.println("isSHowing");
            setSearchPanel();
            sPanel.contentPanel.updateUI();
//            searchButton.dispatchEvent(new MouseEvent(searchButton, WIDTH, WIDTH, SOMEBITS, WIDTH, WIDTH, 1, true));
        }
//        else
//            System.err.println("notSHowing");
        
       
//        setSearchPanel();
        updateBookId();
        
    }
    
    public static int contentCompCount(){
        System.out.println("cc:"+contentPanel.getComponentCount());
        return contentPanel.getComponentCount();
    }
    
    public static void updateBookId(){
        for(int i=0;i<contentPanel.getComponentCount();i++){
            bookPanel user = (bookPanel)contentPanel.getComponent(i);
            user.setxId((i+1)+"");
//            dbConnect.updateRowId("User", ((JLabel)user.getComponent(1)).getText()
//                    , i+1);
            
        }
        contentPanel.updateUI();
    }
    
    public void inserAllBook(){
         JSONParser jsonParser = new JSONParser();
         
        try (FileReader reader = new FileReader("book.json"))
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);
 
            JSONArray bookList = (JSONArray) obj;
//            System.out.println(bookList);
            
            contentPanel.removeAll();
            //Iterate over employee array
            bookList.forEach( book -> parseBookObject( (JSONObject) book ) );
            contentPanel.updateUI();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
        
    }
    
    public void parseBookObject(JSONObject book){
        JSONObject bookObj = (JSONObject) book.get("book");

        contentPanel.add(new bookPanel(
                (String)bookObj.get("no"),
                (String)bookObj.get("serial"),
                (String)bookObj.get("author"),
                (String)bookObj.get("bookname"),
                (String)bookObj.get("genre"),
                (String)bookObj.get("section"),
                (String)bookObj.get("shelf"),
                bookObj.get("quantity"),
                (String)bookObj.get("price"))
        );
//        contentPanel.add(new bookPanel().getPanel());
       
    }
    
    public void parseSearchObject(JSONObject book){
        JSONObject bookObj = (JSONObject) book.get("book");
        String query = (String) bookObj.get("bookname");
        
        if(query.toLowerCase().contains(searchField.getText().toLowerCase())
                ||((String) bookObj.get("serial")).toLowerCase().contains(searchField.getText().toLowerCase())
                ||((String) bookObj.get("author")).toLowerCase().contains(searchField.getText().toLowerCase())
                ||((String) bookObj.get("genre")).toLowerCase().contains(searchField.getText().toLowerCase())
                ||((String) bookObj.get("section")).toLowerCase().contains(searchField.getText().toLowerCase())
                ){
            sPanel.addBook(new bookPanel(
                (String)bookObj.get("no"),
                (String)bookObj.get("serial"),
                (String)bookObj.get("author"),
                (String)bookObj.get("bookname"),
                (String)bookObj.get("genre"),
                (String)bookObj.get("section"),
                (String)bookObj.get("shelf"),
                bookObj.get("quantity"),
                (String)bookObj.get("price"))
             );
        }
        
//        contentPanel.add(new bookPanel().getPanel());
       
    }
    
    //json
    public static void writeJsonFile() {
            JSONArray bookList = new JSONArray();
        try {
            for(int i=0;i<contentPanel.getComponentCount();i++){
                bookPanel user = (bookPanel) contentPanel.getComponent(i);
                
                JSONObject bookDetails = new JSONObject();
                bookDetails.put("no", (i+1)+"");
                bookDetails.put("serial", user.getSerialNo());
                bookDetails.put("author", user.getAuthor());
                bookDetails.put("bookname",user.getBookName());
                bookDetails.put("genre",user.getGenre() );
                bookDetails.put("section", user.getSection());
                bookDetails.put("shelf", user.getShelf());
                bookDetails.put("quantity",(int) user.getQuantity());
                bookDetails.put("price", user.getPrice());
                
                JSONObject bookNo = new JSONObject();
                bookNo.put("book", bookDetails);
                
                bookList.add(bookNo);
            }    
            
            //Write JSON file
            try (FileWriter file = new FileWriter("book.json")) {
                
                file.write(bookList.toJSONString());
                file.flush();
                System.err.println("afterFlush");
                
            } catch (IOException e) {
                e.printStackTrace();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        updateBookId();
    }
    
    public static void editJson(int xId,bookPanel panel){
        JSONParser jsonParser = new JSONParser(); 
        try (FileReader reader = new FileReader("book.json"))
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);
             JSONObject bookDetails = new JSONObject();
                bookDetails.put("no", (xId+1)+"");
                bookDetails.put("serial", panel.getSerialNo());
                bookDetails.put("author", panel.getAuthor());
                bookDetails.put("bookname",panel.getBookName());
                bookDetails.put("genre",panel.getGenre() );
                bookDetails.put("section", panel.getSection());
                bookDetails.put("shelf", panel.getShelf());
                bookDetails.put("quantity",(int) panel.getQuantity());
                bookDetails.put("price", panel.getPrice());
                
                JSONObject bookNo = new JSONObject();
                bookNo.put("book", bookDetails);
 
            JSONArray bookList = (JSONArray) obj;
            bookList.remove(xId+1);
            bookList.add(xId+1,bookNo);
            
            FileWriter file = new FileWriter("book.json");
                
            file.write(bookList.toJSONString());
            file.flush();
            System.err.println("afterFlush");
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(inventoryPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(inventoryPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(inventoryPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void setCompBackground(){
        inventoryPanel.setBackground(Book_Store.getColor(1));
        
        contentPanel.setBackground(Book_Store.getColor(0));
        addBook.setBackground(Book_Store.getColor(4));
        bookPanel.setBackground(Book_Store.getColor(4));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acctType;
    private javax.swing.JLabel acctType1;
    private javax.swing.JLabel acctType2;
    private javax.swing.JLabel acctType5;
    private javax.swing.JLabel acctType6;
    private javax.swing.JLabel acctType7;
    public static javax.swing.JButton addBook;
    public static javax.swing.JPanel bookPanel;
    public static javax.swing.JPanel bookPanel1;
    public static javax.swing.JPanel bookPanel2;
    public static javax.swing.JPanel checkPanel;
    public static javax.swing.JTextArea checkReceipt;
    public static javax.swing.JLabel clear;
    public static javax.swing.JPanel contentPanel;
    public static javax.swing.JPanel inventoryPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainP;
    private javax.swing.JLabel password;
    private javax.swing.JLabel password1;
    private javax.swing.JLabel password2;
    public static javax.swing.JLabel searchButton;
    public static javax.swing.JTextField searchField;
    private javax.swing.JLabel securityAnswer2;
    private javax.swing.JLabel securityAnswer3;
    private javax.swing.JLabel securityAnswer4;
    private javax.swing.JLabel securityQuestion2;
    private javax.swing.JLabel securityQuestion3;
    private javax.swing.JLabel securityQuestion4;
    private javax.swing.JLabel username;
    private javax.swing.JLabel username1;
    private javax.swing.JLabel username2;
    private javax.swing.JLabel xId;
    private javax.swing.JLabel xId1;
    private javax.swing.JLabel xId2;
    // End of variables declaration//GEN-END:variables
}
